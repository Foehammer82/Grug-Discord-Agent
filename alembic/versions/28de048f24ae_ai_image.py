"""ai_image

Revision ID: 28de048f24ae
Revises: 6983b8e2e456
Create Date: 2025-01-18 10:43:35.918827

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '28de048f24ae'
down_revision = '6983b8e2e456'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dalle_image_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('prompt', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('size', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('quality', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('revised_prompt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('store', schema=None) as batch_op:
        batch_op.drop_index('store_prefix_idx')

    op.drop_table('store')
    with op.batch_alter_table('checkpoint_blobs', schema=None) as batch_op:
        batch_op.drop_index('checkpoint_blobs_thread_id_idx')

    op.drop_table('checkpoint_blobs')
    with op.batch_alter_table('checkpoints', schema=None) as batch_op:
        batch_op.drop_index('checkpoints_thread_id_idx')

    op.drop_table('checkpoints')
    op.drop_table('checkpoint_migrations')
    op.drop_table('store_migrations')
    with op.batch_alter_table('checkpoint_writes', schema=None) as batch_op:
        batch_op.drop_index('checkpoint_writes_thread_id_idx')

    op.drop_table('checkpoint_writes')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('checkpoint_writes',
    sa.Column('thread_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('checkpoint_ns', sa.TEXT(), server_default=sa.text("''::text"), autoincrement=False, nullable=False),
    sa.Column('checkpoint_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('idx', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('channel', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('blob', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('task_path', sa.TEXT(), server_default=sa.text("''::text"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('thread_id', 'checkpoint_ns', 'checkpoint_id', 'task_id', 'idx', name='checkpoint_writes_pkey')
    )
    with op.batch_alter_table('checkpoint_writes', schema=None) as batch_op:
        batch_op.create_index('checkpoint_writes_thread_id_idx', ['thread_id'], unique=False)

    op.create_table('store_migrations',
    sa.Column('v', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('v', name='store_migrations_pkey')
    )
    op.create_table('checkpoint_migrations',
    sa.Column('v', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('v', name='checkpoint_migrations_pkey')
    )
    op.create_table('checkpoints',
    sa.Column('thread_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('checkpoint_ns', sa.TEXT(), server_default=sa.text("''::text"), autoincrement=False, nullable=False),
    sa.Column('checkpoint_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('parent_checkpoint_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('checkpoint', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('thread_id', 'checkpoint_ns', 'checkpoint_id', name='checkpoints_pkey')
    )
    with op.batch_alter_table('checkpoints', schema=None) as batch_op:
        batch_op.create_index('checkpoints_thread_id_idx', ['thread_id'], unique=False)

    op.create_table('checkpoint_blobs',
    sa.Column('thread_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('checkpoint_ns', sa.TEXT(), server_default=sa.text("''::text"), autoincrement=False, nullable=False),
    sa.Column('channel', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('version', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('blob', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('thread_id', 'checkpoint_ns', 'channel', 'version', name='checkpoint_blobs_pkey')
    )
    with op.batch_alter_table('checkpoint_blobs', schema=None) as batch_op:
        batch_op.create_index('checkpoint_blobs_thread_id_idx', ['thread_id'], unique=False)

    op.create_table('store',
    sa.Column('prefix', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('key', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('prefix', 'key', name='store_pkey')
    )
    with op.batch_alter_table('store', schema=None) as batch_op:
        batch_op.create_index('store_prefix_idx', ['prefix'], unique=False)

    op.drop_table('dalle_image_requests')
    # ### end Alembic commands ###
