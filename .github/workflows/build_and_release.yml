name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ""

      - name: Build and Push Grug Base Docker image
        run: |
          IMAGE_NAME=$(echo ghcr.io/${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          docker build -t $IMAGE_NAME:${{ steps.tag_version.outputs.new_tag }} .
          docker push $IMAGE_NAME:${{ steps.tag_version.outputs.new_tag }}
          docker save $IMAGE_NAME:${{ steps.tag_version.outputs.new_tag }} -o grug_base_${{ steps.tag_version.outputs.new_tag }}.tar

      - name: Build and Push Grug Postgres Docker image
        run: |
          IMAGE_NAME=$(echo ghcr.io/${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          docker build -f postgres.Dockerfile -t $IMAGE_NAME-postgres:${{ steps.tag_version.outputs.new_tag }} .
          docker push $IMAGE_NAME-postgres:${{ steps.tag_version.outputs.new_tag }}
          docker save $IMAGE_NAME-postgres:${{ steps.tag_version.outputs.new_tag }} -o grug_postgres_${{ steps.tag_version.outputs.new_tag }}.tar

      - name: Create a GitHub release
        id: _release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Upload Grug Base Docker image to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps._release.outputs.upload_url }}
          asset_path: ./grug_base_${{ steps.tag_version.outputs.new_tag }}.tar
          asset_name: grug_base_${{ steps.tag_version.outputs.new_tag }}.tar
          asset_content_type: application/x-tar

      - name: Upload Grug Postgres Docker image to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps._release.outputs.upload_url }}
          asset_path: ./grug_postgres_${{ steps.tag_version.outputs.new_tag }}.tar
          asset_name: grug_postgres_${{ steps.tag_version.outputs.new_tag }}.tar
          asset_content_type: application/x-tar
