name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version number
        id: extract_version
        run: |
          VERSION=$(grep -Po '(?<=^version = ")[^"]*' pyproject.toml)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and push Grug Base Docker image
        run: |
          docker build -t ghcr.io/$(${{ github.repository }} | tr '[:upper:]' '[:lower:]'):${{ env.VERSION }} .
          docker push ghcr.io/$(${{ github.repository }} | tr '[:upper:]' '[:lower:]'):${{ env.VERSION }}

      - name: Bump version number
        if: github.ref == 'refs/heads/main'
        run: |
          NEW_VERSION=$(echo ${{ env.VERSION }} | awk -F. -v OFS=. '{$NF++;print}')
          echo $NEW_VERSION > VERSION
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add VERSION
          git commit -m "Bump version to $NEW_VERSION"
          git push origin main

      - name: Deploy to production
        if: github.ref == 'refs/heads/main'
        run: |
          # Add your deployment commands here
          echo "Deploying version ${{ env.VERSION }} to production"